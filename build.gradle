plugins {
    id "java"
    id "application"
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "org.sonarqube" version "2.5"
}

repositories {
    jcenter()
}

group = "com.github.pop4959.srbot"
mainClassName = "com.github.pop4959.srbot.Main"
version = project.property("version")
jdaVersion = project.property("jdaVersion")
botFolder = project.property("botFolder")

compileJava {
    options.encoding = project.property("compileJavaEncoding")
    options.compilerArgs += ["-Xlint:deprecation"]
}

dependencies {
    implementation("net.dv8tion:JDA:$jdaVersion")
    implementation("com.ibasco.agql:agql-steam-webapi:1.2.1")
    implementation("org.slf4j:slf4j-api:1.7.36")
    implementation("org.slf4j:slf4j-simple:1.7.36")
    implementation("org.reflections:reflections:0.9.11")
    implementation("org.glassfish.jersey.core:jersey-common:3.1.3")
    implementation("org.glassfish.jersey.containers:jersey-container-servlet:3.1.3")
    implementation("org.glassfish.jersey.containers:jersey-container-grizzly2-http:3.1.3")
    implementation("org.glassfish.jersey.inject:jersey-hk2:3.1.3")
    implementation("com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.14.2")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.2")
}

task cleanBotJar(type: Delete) {
    delete fileTree(dir: "${botFolder}", include: "*.jar")
}

task copyBotJar(dependsOn: "shadowJar", type: Copy) {
    from("${buildDir}/libs") {
        include "SRBot-${version}-all.jar"
    }
    rename("-all", "")
    into botFolder
}

task prepareBot(dependsOn: ["cleanBotJar", "copyBotJar"]) {}

task startBot(dependsOn: "prepareBot", type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = mainClassName
    workingDir = botFolder
}
sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21
